function plot_pCa_data_with_y_errors(d,varargin)

p=inputParser;
addRequired(p,'d');
addOptional(p,'axis_handle',[]);
addOptional(p,'y_axis_label',{'Stress','(kN m^{-2})'});
addOptional(p,'y_label_offset',-0.15);
addOptional(p,'y_axis_offset',-0.05);
addOptional(p,'high_pCa_value',9.0);
addOptional(p,'pCa90_replacement_value',7.0);
addOptional(p,'x_limits',[4.5 7]);
addOptional(p,'x_ticks',[7 6.5:-0.5:4.5]);
addOptional(p,'y_ticks',[]);
addOptional(p,'x_break_point',6.75);
addOptional(p,'x_break_width',0.04);
addOptional(p,'x_break_spacing',0.075);
addOptional(p,'x_break_line_width',1.5);
addOptional(p,'x_break_rel_height',0.03);
addOptional(p,'draw_data_break',1);
addOptional(p,'marker_face_colors',[]);
addOptional(p,'marker_symbols',{'o','^','s','d'});
addOptional(p,'marker_size',8);
addOptional(p,'label_font_size',12);
addOptional(p,'tick_font_size',12);
addOptional(p,'x_tick_length',0.03);
addOptional(p,'y_tick_decimal_places',0);
addOptional(p,'fit_line_width',1.5);
addOptional(p,'title',[]);

parse(p,d,varargin{:});
p=p.Results;

% Code
if (isempty(p.axis_handle))
    figure;
    clf;
else
    subplot(p.axis_handle);
    hold on;
end

if (isempty(p.marker_face_colors))
    p.marker_face_colors = jet(numel(d));
end

if (isempty(p.y_ticks))
    y=[];
    for i=1:numel(d)
        y = [y ; d(i).y];
    end
    p.y_ticks = [0 multiple_greater_than(max(y(:)),10^floor(log10(max(y(:)))))];
end

% Replace pCa 9.0 values
if (~isempty(p.pCa90_replacement_value))
    for i=1:numel(d)
        vi = find(d(i).pCa == p.high_pCa_value);
        d(i).pCa(vi) = p.pCa90_replacement_value;
    end
end


% Set up data
for i=1:numel(d)
    x_data(i).mean_values = d(i).pCa;
    x_data(i).error_values = 0*d(i).pCa;
    y_data(i).mean_values = d(i).y;
    y_data(i).error_values = d(i).y_error;
end

plot_with_error_bars( ...
    'x_data',x_data, ...
    'y_data',y_data, ...
    'y_limits',[p.y_ticks(1) p.y_ticks(end)], ...
    'marker_face_color',p.marker_face_colors, ...
    'marker_symbols',p.marker_symbols, ...
    'marker_size',p.marker_size);

if (isfield(d(1),'x_fit'))
    for i=1:numel(d)
        % plot line in two parts
        for j=1:2
            if (j==1)
                vi = find( (d(i).x_fit<max(p.x_ticks)) & ...
                        (d(i).x_fit>(p.x_break_point+p.x_break_spacing)));
            else
                vi = find( (d(i).x_fit<(p.x_break_point-p.x_break_spacing)) & ...
                        (d(i).x_fit>min(p.x_ticks)));
            end
            plot(d(i).x_fit(vi),d(i).y_fit(vi),'-', ...
                'LineWidth',p.fit_line_width, ...
                'Color',p.marker_face_colors(i,:));
        end
    end
end

% Generate x_tick_labels
for i=1:length(p.x_ticks)
    if (p.x_ticks(i)==p.pCa90_replacement_value)
        x_tick_labels{i}=sprintf('%.1f',p.high_pCa_value);
    else
        x_tick_labels{i}=sprintf('%.1f',p.x_ticks(i));
    end
end


xt = p.x_ticks
xt

axes_data = improve_axes(...
    'x_ticks',p.x_ticks, ...
    'x_tick_label_positions',p.x_ticks, ...
    'x_tick_labels',x_tick_labels, ...
    'x_axis_label','pCa', ...
    'y_axis_label',p.y_axis_label, ...
    'label_font_size',p.label_font_size, ...
    'tick_font_size',p.tick_font_size, ...
    'y_label_offset',p.y_label_offset, ...
    'y_axis_offset',p.y_axis_offset, ...
    'y_tick_decimal_places',p.y_tick_decimal_places, ......
    'y_ticks',p.y_ticks, ...
    'x_tick_length',p.x_tick_length, ...
    'title',p.title);

% Add in a break
xb=p.x_break_point+p.x_break_width*[1 -1];
yb_axis=p.x_break_rel_height*max(p.y_ticks)*[-1 1];
% yb_data=yb_axis+mean(pCa90_y_values);
% Draw over the axis
plot(p.x_break_point+[0 p.x_break_spacing], ...
    axes_data.x_axis_y_location*[1 1], ...
    'w-','LineWidth',axes_data.axis_line_width+1);
% Now draw lines
for i=1:2
    plot(xb,yb_axis + axes_data.x_axis_y_location, ...
            'k-','LineWidth',p.x_break_line_width);
%     if (p.draw_data_break)
%         plot(xb,yb_data, ...
%             'k-','LineWidth',params.x_break_line_width);
%     end
    xb=xb+p.x_break_spacing;
end

    
    






